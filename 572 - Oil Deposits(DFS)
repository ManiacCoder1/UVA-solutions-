-------------------------it is a good practise for dfs------------------------

//In the Name of Allah, the Most Beneficent, the Most Merciful.
//Author: M.A. Jobayed Hossain Asif.
#include<bits/stdc++.h>
using namespace std;
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define ln "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define db debug
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif
void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
 vector<int>edge[10000];
 bool vis[1000000];
 void dfs(int curr){
    vis[curr] = 1;
    for(int i = 0;i<edge[curr].size();i++){
        int x = edge[curr][i];
        if(vis[x]==0) dfs(x);
    }
 }

void solve(){
 while(1){
    int n,m;
    cin>>n>>m;
    if(n == 0 && m == 0) break;
    
    char a[n+2][m+2];
    int b[n+2][m+2];
    memset(b,0.sizeof(b));
    int cnt = 1;
    for(int i = 1;i<=n;i++){
        for(int j = 1;j<=m;j++) {
            cin>>a[i][j];
            if(a[i][j]=='@') {
                b[i][j] = cnt;
                cnt++;
            }

        }
    }

    // for(int i = 0;i<n+2;i++){
    //     for(int j = 0;j<m+2;j++) cout<<b[i][j];
    //         cout<<ln;
    // }
    for(int i = 1;i<=n;i++){
        for(int j = 1;j<=m;j++){
            if(b[i][j]!=0){
                int x = b[i][j];
                db(x)
                if(b[i-1][j-1]!=0){
                    int y = b[i-1][j-1];
                    edge[x].pb(y);
                   // edge[y].pb(x);
                }
                if(b[i-1][j]!=0){
                        int y = b[i-1][j] ;
                        edge[x].pb(y);
                       // edge[y].pb(x);
                }
                if(b[i-1][j+1]!=0){
                        int y = b[i-1][j+1];
                        edge[x].pb(y);
                       // edge[y].pb(x);
                }
                if(b[i][j-1]!=0){
                        int y = b[i][j-1];
                        edge[x].pb(y);
                       // edge[y].pb(x);
                }
                if(b[i][j+1]!=0){
                        int y = b[i][j+1];
                        edge[x].pb(y);
                       // edge[y].pb(x);
                }
                if(b[i+1][j-1]!=0){
                        int y = b[i+1][j-1];
                        edge[x].pb(y);
                        //edge[y].pb(x);
                }
                if(b[i+1][j]!=0){
                        int y = b[i+1][j];
                        edge[x].pb(y);
                        //edge[y].pb(x);
                }
                if(b[i+1][j+1]!=0){
                        int y = b[i+1][j+1] ;
                        edge[x].pb(y);
                        //edge[y].pb(x);
                }
            }
        }
    }


    // for(int i = 1;i<=cnt;i++){
    //     for(int j = 0;j<edge[i].size();j++) cout<<edge[i][j];
    //         cout<<ln;
    // }
    db(cnt)
    int cnt1 = 0;
    for(int i = 1;i<cnt;i++){
        if(vis[i]==0){
            cnt1++;
            dfs(i);

        }
    }
   
    cout<<cnt1<<ln;
    for(int i = 1;i<cnt;i++){
        vis[i] = false;
        edge[i].clear();
    }
}
}
 
int main() {
    fastio();
#ifndef ONLINE_JUDGE
    freopen("input1.txt", "r", stdin);
     freopen("output1.txt", "w", stdout);
    freopen("error1.txt", "w", stderr);
#endif
    ll t = 1;
  //  cin >> t;
    for(int it=1;it<=t;it++) {
 
        solve();
    }
    return 0;
}
//https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=513
